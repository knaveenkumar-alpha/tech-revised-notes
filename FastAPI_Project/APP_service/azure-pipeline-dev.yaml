trigger:
  - feature or dev

variables:
  azureServiceConnectionID: ""
  WebAppName: App-Service
  vmImageName: ecoSys
  environmentName: DataEngg-dev
  projectRoot: $(System.DefaultWorkingDirectory)
  pythonVersion: "3.8"

stages:
  - stage: Build
    displayName: Build stage
    jobs:
      - job: BuildJob
        pool:
          name: $(vmImageName)
        steps:
          - task: Bash@3
            inputs:
              targetType: "inline"
              script: |
                sudo snap install powershell --classic
            displayName: "Install powershell"
          - script: |
              python$(pythonVersion) -m venv antenv
              source antenv/bin/activate
              python$(pythonVersion) -m pip install --upgrade pip
              pip install setup
              pip install -r requirements.txt
            workingDirectory: $(projectRoot)
            displayName: "Install requirements"

          - script: |
              source antenv/bin/activate
              coverage run -m pytest
              coverage report
            displayName: "Run Pytest and Report"

          - task: ArchiveFiles@2
            displayName: "Archive Files"
            inputs:
              rootFolderOrFile: "$(projectRoot)"
              includeRootFolder: false
              archiveType: zip
              archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
              replaceExistingArchive: true

          - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
            displayName: "Upload Package"
            artifact: drop

  - stage: Deploy
    displayName: "Deploy Web app"
    dependsOn: Build
    condition: succeeded()
    jobs:
      - deployment: DeploymentJob
        pool:
          name: $(vmImageName)
        environment: $(environmentName)
        strategy:
          runOnce:
            deploy:
              steps:
                - task: AzureWebApp@1
                  displayName: "Deploy azure web app"
                  inputs:
                    azureSubscription: $(azureServiceConnectionID)
                    appName: $(webAppName)
                    appType: webAppLinux
                    package: $(Pipeline.Workspace)/drop/$(Build.BuildId).Zip
                    startUpCommand: "gunicorn run:app --build 0.0.0.0 --workers 4 --log-level debug --timeout 420 --gracful-timeout 420 --worker-class uvicorn.workers.UvicornWorker"
